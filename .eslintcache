[{"E:\\task\\project\\rdvault\\src\\index.js":"1","E:\\task\\project\\rdvault\\src\\reportWebVitals.js":"2","E:\\task\\project\\rdvault\\src\\components\\pages\\Header.jsx":"3","E:\\task\\project\\rdvault\\src\\App.js":"4","E:\\task\\project\\rdvault\\src\\components\\pages\\Main.js":"5","E:\\task\\project\\rdvault\\src\\components\\pages\\Footer.jsx":"6","E:\\task\\project\\rdvault\\src\\components\\common\\Data.jsx":"7","E:\\task\\project\\rdvault\\src\\components\\pages\\CompanyDetails.jsx":"8","E:\\task\\project\\rdvault\\src\\components\\pages\\ClaimPeriod.jsx":"9","E:\\task\\project\\rdvault\\src\\components\\pages\\Grant.jsx":"10","E:\\task\\project\\rdvault\\src\\components\\pages\\Expenses.jsx":"11","E:\\task\\project\\rdvault\\src\\components\\common\\Dates.js":"12","E:\\task\\project\\rdvault\\src\\components\\pages\\DatePicker.jsx":"13","E:\\task\\project\\rdvault\\src\\components\\common\\Context.js":"14","E:\\task\\project\\rdvault\\src\\components\\redux\\reducer\\index.js":"15","E:\\task\\project\\rdvault\\src\\components\\redux\\store\\store.js":"16","E:\\task\\project\\rdvault\\src\\components\\redux\\reducer\\CompanyReducer.js":"17","E:\\task\\project\\rdvault\\src\\components\\redux\\store\\Store.js":"18","E:\\task\\project\\rdvault\\src\\components\\redux\\action\\CompanyAction.js":"19","E:\\task\\project\\rdvault\\src\\components\\redux\\reducer\\ClaimReducer.js":"20","E:\\task\\project\\rdvault\\src\\components\\redux\\action\\ClaimPeriod.js":"21","E:\\task\\project\\rdvault\\src\\components\\redux\\reducer\\GrantPeriod.js":"22","E:\\task\\project\\rdvault\\src\\components\\redux\\action\\Grant.js":"23","E:\\task\\project\\rdvault\\src\\Form.js":"24"},{"size":569,"mtime":1609413808956,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1606119462860,"results":"27","hashOfConfig":"26"},{"size":4797,"mtime":1609160673358,"results":"28","hashOfConfig":"26"},{"size":393,"mtime":1609416426879,"results":"29","hashOfConfig":"26"},{"size":988,"mtime":1609309849310,"results":"30","hashOfConfig":"26"},{"size":791,"mtime":1608545749461,"results":"31","hashOfConfig":"26"},{"size":3162,"mtime":1608631031025,"results":"32","hashOfConfig":"26"},{"size":11643,"mtime":1609743560378,"results":"33","hashOfConfig":"26"},{"size":18945,"mtime":1609756158530,"results":"34","hashOfConfig":"26"},{"size":7081,"mtime":1609743570369,"results":"35","hashOfConfig":"26"},{"size":3024,"mtime":1609743220230,"results":"36","hashOfConfig":"26"},{"size":518,"mtime":1608727040533,"results":"37","hashOfConfig":"26"},{"size":1875,"mtime":1608792903338,"results":"38","hashOfConfig":"26"},{"size":95,"mtime":1609306029633,"results":"39","hashOfConfig":"26"},{"size":360,"mtime":1609324425473,"results":"40","hashOfConfig":"26"},{"size":266,"mtime":1609314643751,"results":"41","hashOfConfig":"26"},{"size":302,"mtime":1609317216989,"results":"42","hashOfConfig":"26"},{"size":283,"mtime":1609314829727,"results":"43","hashOfConfig":"26"},{"size":338,"mtime":1609317210897,"results":"44","hashOfConfig":"26"},{"size":341,"mtime":1609324005198,"results":"45","hashOfConfig":"26"},{"size":372,"mtime":1609323957620,"results":"46","hashOfConfig":"26"},{"size":335,"mtime":1609741494161,"results":"47","hashOfConfig":"26"},{"size":288,"mtime":1609740176315,"results":"48","hashOfConfig":"26"},{"size":1232,"mtime":1609416082140,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"fn53wx",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},"E:\\task\\project\\rdvault\\src\\index.js",[],["104","105"],"E:\\task\\project\\rdvault\\src\\reportWebVitals.js",[],["106","107"],"E:\\task\\project\\rdvault\\src\\components\\pages\\Header.jsx",[],"E:\\task\\project\\rdvault\\src\\App.js",["108","109"],"E:\\task\\project\\rdvault\\src\\components\\pages\\Main.js",["110","111","112"],"import React, { useState } from 'react';\r\nimport Header from './Header';\r\nimport CompanyDetails from './CompanyDetails'\r\nimport Footer from './Footer'\r\nimport ClaimPeriod from './ClaimPeriod';\r\nimport Grant from './Grant';\r\nimport Expenses from './Expenses';\r\nimport Context from '../common/Context'\r\n\r\n\r\nconst Main = (props) => {\r\n    const [value,setValue] = useState()\r\n    return (\r\n\r\n        <div>\r\n\r\n            <Header />\r\n            <section className=\"tell-us-about-your-company\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"tell-us-about-your-company-section\">\r\n                   \r\n                            <CompanyDetails/>\r\n                            <ClaimPeriod />\r\n                            <Grant />\r\n                            <Expenses />\r\n                       \r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <Footer />\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Main;","E:\\task\\project\\rdvault\\src\\components\\pages\\Footer.jsx",[],"E:\\task\\project\\rdvault\\src\\components\\common\\Data.jsx",[],"E:\\task\\project\\rdvault\\src\\components\\pages\\CompanyDetails.jsx",["113","114","115"],"E:\\task\\project\\rdvault\\src\\components\\pages\\ClaimPeriod.jsx",["116","117","118","119","120","121","122","123","124","125","126","127","128","129"],"import React, { useState, useEffect } from 'react';\r\nimport Dates from '../common/Dates';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport moment from \"moment\";\r\nimport 'react-dates/initialize';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport { DateRangePicker, DayPickerRangeController } from 'react-dates';\r\nimport './picker.css'\r\nimport Context from '../common/Context'\r\nimport { claimPeriod } from '../../components/redux/action/ClaimPeriod';\r\n\r\n\r\n\r\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n];\r\n\r\nvar regex = /^(((0[1-9]|[12]\\d|3[01])\\/(0[13578]|1[02])\\/((19|[2-9]\\d)\\d{2}))|((0[1-9]|[12]\\d|30)\\/(0[13456789]|1[012])\\/((19|[2-9]\\d)\\d{2}))|((0[1-9]|1\\d|2[0-8])\\/02\\/((19|[2-9]\\d)\\d{2}))|(29\\/02\\/((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))))$/g;\r\n\r\nconst month = [\"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"];\r\n\r\nconst ClaimPeriod = (props) => {\r\n    const dispatch = useDispatch();\r\n    const companyresponse = useSelector(state => state.companyReducer);\r\n    const emo = useSelector(state => state);\r\n    const [firstDateMessage, setFirstDateMessage] = useState(\"\");\r\n    const [secondDateMessage, setSecondDateMessage] = useState(\"\")\r\n    const [data, setData] = useState([]);\r\n    const [checkData, setCheckData] = useState([]);\r\n    const [valDate, setValDate] = useState(null);\r\n    const [hideDate, setHideDate] = useState(false);\r\n    const [secondDate, setSecondDate] = useState(\"\")\r\n    const [valstartDate, valsetStartDate] = useState(\"\");\r\n    const [valendDate, valsetEndDate] = useState(\"\");\r\n    const [firstClick, setFirstClick] = useState(false)\r\n    const [dateRange, setdateRange] = useState({\r\n        startDate: null,\r\n        endDate: null\r\n    });\r\n    // const [startDate,setstartDate] = useState(null)\r\n    // const [endDate,setendDate] = useState(null)\r\n    const [datebool, setDateBool] = useState(false)\r\n    const [focus, setFocus] = useState(\"startDate\");\r\n    const [focusedInput, setFocusedInput] = useState('startDate');\r\n\r\n    const { startDate, endDate } = dateRange;\r\n\r\n    const handleOnDateChange = (startDate, endDate) => {\r\n        setdateRange(startDate, endDate);\r\n        setDateBool(true)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setCheckData(Dates)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (endDate) {\r\n            dispatch(claimPeriod(true))\r\n            const elmnt = document.getElementById(\"expensess\");\r\n            elmnt.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n\r\n    }, [endDate])\r\n\r\n\r\n    const onFocusChange = (focus) => {\r\n\r\n        setFocus(focus)\r\n        if (focus) {\r\n            setFocus(focus)\r\n        } else {\r\n            setFocus(\"startDate\")\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        setData(Dates)\r\n    }, [])\r\n\r\n    console.log(\"emo\", emo)\r\n\r\n    const handelCheckBox = (e) => {\r\n        const mapdata = data.map((val, index) => {\r\n            if (val.name === e.target.name && val.checked === false) {\r\n                val.checked = true;\r\n                dispatch(claimPeriod(true))\r\n                valsetStartDate(val.startdate.getDate() + \"/\" + monthNames[val.startdate.getMonth()] + \"/\" + val.startdate.getFullYear())\r\n                valsetEndDate(val.enddate.getDate() + \"/\" + monthNames[val.enddate.getMonth()] + \"/\" + val.enddate.getFullYear())\r\n                return val;\r\n            }\r\n            else if (val.name === e.target.name && val.checked === true) {\r\n                dispatch(claimPeriod(false));\r\n                val.checked = false;\r\n                return val;\r\n            }\r\n            else {\r\n                val.checked = false;\r\n                return val;\r\n            }\r\n        })\r\n        const elmnt = document.getElementById(\"expensess\");\r\n        elmnt.scrollIntoView({ behavior: \"smooth\" });\r\n        setCheckData(mapdata);\r\n    }\r\n\r\n    //   let dateboolean = false;\r\n    //   data.map((ele,i)=>{\r\n    //       if(ele.checked === true) {\r\n    //         dateboolean=ele.checked;\r\n    //       }\r\n    //   })\r\n\r\n    console.log(\"mapdatamapdata\", checkData)\r\n\r\n    const handleClick = () => {\r\n\r\n        setFirstClick(true)\r\n    }\r\n\r\n    const firstDateChange = (e) => {\r\n        setHideDate(true);\r\n        setValDate(e.target.value)\r\n        \r\n        const match = regex.test(e.target.value)\r\n        if (e.target.value.length < 10) {\r\n            setFirstDateMessage(\"Date is invalid\");\r\n            dispatch(claimPeriod(false));\r\n        }\r\n        if (match === false) {\r\n            setFirstDateMessage(\"Date is invalid\")\r\n        } if (match === true) {\r\n            setFirstDateMessage(null)\r\n        }\r\n        //  if (e.target.value.length === 2) {\r\n        //     setHideDate(true);\r\n\r\n        //     setValDate(e.target.value + '/')\r\n        // } \r\n        // if (e.target.value.length === 5) {\r\n        //     setValDate(e.target.value + '/')\r\n        // }\r\n    }\r\n\r\n\r\n    const secondDateChange = (e) => {\r\n        const match = regex.test(e.target.value);\r\n        setSecondDate(e.target.value)\r\n       \r\n        if (e.target.value.length < 10) {\r\n            setSecondDateMessage(\"Date is invalid\");\r\n            dispatch(claimPeriod(false));\r\n        }\r\n        if (match === false) {\r\n            setSecondDateMessage(\"Date is invalid\")\r\n        }\r\n        //  if(match ===true) {\r\n        //     setFirstDateMessage(\"\")\r\n        // }\r\n        // if (e.target.value.length === 2) {\r\n\r\n        //     setSecondDate(e.target.value + '/')\r\n        // } if (e.target.value.length === 5) {\r\n        //     setSecondDate(e.target.value + '/')\r\n        // }\r\n        if (match === true && e.target.value.length === 10) {\r\n            setSecondDateMessage(\"\")\r\n            dispatch(claimPeriod(true))\r\n            const elmnt = document.getElementById(\"expensess\");\r\n            elmnt.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n    }\r\n\r\n    const dateKey = (e) => {\r\n\r\n        if (e.charCode < 48 || e.charCode > 57) {\r\n            e.preventDefault();\r\n            return false\r\n        }\r\n    }\r\n\r\n    console.log(\"vcheckData\", companyresponse.data, valDate)\r\n\r\n\r\n    return (\r\n        <>\r\n            <div id=\"claim-period\" className={companyresponse.data === true ? \"row custom-m-top-40\" : \"row custom-m-top-40 click\"}  >\r\n                <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-12\">\r\n                    <div className=\"tell-us-about-your-company-left-section\">\r\n                        <hr className=\"tell-us-about-your-company-line\" />\r\n                        <h3>  Your R&D Claim Period</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6 col-xl-6 col-lg-6 col-sm-6 col-12\">\r\n                    <div className=\"tell-us-about-your-company-center-section\">\r\n                        <div className=\"tell-us-about-your-company-card-section\">\r\n                            <p>Please select the claim period you would like to\r\n                                estimate your R&D claim for?\r\n                        </p>\r\n                            {\r\n                                checkData.length >= 1 ? checkData.map((ele, index) => {\r\n                                    return (\r\n                                        <div className=\"custom-checbox-1 tell-us-about-your-company-card-section-label\">\r\n                                            <span>Period {ele.id}:{\r\n                                                ele.startdate.getDate() + \" \" + monthNames[ele.startdate.getMonth()] + \" \" + ele.startdate.getFullYear() + \" to \" + \"\" +\r\n                                                ele.enddate.getDate() + \" \" + monthNames[ele.enddate.getMonth()] + \" \" + ele.enddate.getFullYear()}</span>\r\n                                            <div className=\"cust-checkbox\">\r\n                                                <div className=\"custom-checkbox\">\r\n                                                    <input name={ele.name}\r\n                                                        className=\"checkbox-custom\"\r\n                                                        id={ele.id}\r\n                                                        type=\"checkbox\"\r\n                                                        checked={companyresponse.data === true && ele.checked === true ? true : false}\r\n                                                        onChange={handelCheckBox}\r\n                                                    //  disabled={datebool === true ? !ele.checked : ele.checked}\r\n                                                    />\r\n                                                    <label className=\"checkbox-custom-label\" for={ele.id}></label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                }) : null\r\n                            }\r\n                            <div className=\"calendar-label-input-section \">\r\n                                <div className=\"calendar-label-input form-group\">\r\n                                    <label>Claim Period Start Date:</label>\r\n                                    <div className=\"calendar-input-section\">\r\n                                        <input type=\"text\" id=\"datepicker1\"\r\n                                            // value={datebool === true && startDate !== null ?\r\n                                            //     moment(startDate._d).format(\"DD/MM/YYYY\") : \"dd/mm/yyyy\"} \r\n                                            // onKeyPress={dateKey}\r\n                                            placeholder={\"DD/MM/YYYY\"}\r\n                                            // value={datebool === true ? startDate !== null && moment(startDate._d).format(\"DD/MM/YYYY\") : valDate}\r\n                                            value={\r\n                                                companyresponse.data === true && startDate !== null ? moment(startDate._d).format(\"DD/MM/YYYY\") :\r\n                                                    companyresponse.data === true && valDate ? valDate : \"\"}\r\n                                            onChange={firstDateChange}\r\n                                            maxlength={10}\r\n                                        />\r\n                                        <span className=\"left-line\">|</span>\r\n                                        <span className=\"date-error\">\r\n                                            {firstDateMessage ? firstDateMessage : null}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div>{firstDateMessage}</div> */}\r\n                                <div className=\"calendar-label-input form-group\">\r\n                                    <label>Claim Period End Date:</label>\r\n                                    <div className=\"calendar-input-section\">\r\n                                        <input type=\"text\" id=\"datepicker1\"\r\n                                            // value={datebool === true && startDate !== null && endDate !== null ?\r\n                                            //     moment(endDate._d).format(\"DD/MM/YYYY\") : \"dd/mm/yyyy\"}\r\n\r\n                                            // onKeyPress={dateKey}\r\n                                            placeholder={\"DD/MM/YYYY\"}\r\n                                            value={\r\n                                                companyresponse.data === true && endDate !== null ? moment(endDate._d).format(\"DD/MM/YYYY\") :\r\n                                                    companyresponse.data === true && secondDate ? secondDate : \"\"}\r\n                                            onChange={secondDateChange}\r\n                                            maxlength={10}\r\n                                        // onChange={DateChange}\r\n                                        />\r\n                                        <span className=\"left-line\">|</span>\r\n                                        <span className=\"date-error\">{secondDateMessage ? secondDateMessage : null}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* <DateRangePicker\r\n                            startDatePlaceholderText=\"Start\"\r\n                            startDate={startDate}\r\n                            required={false}\r\n                            onDatesChange={handleOnDateChange}\r\n                            endDatePlaceholderText=\"End\"\r\n                            endDate={endDate}\r\n                            reopenPickerOnClearDate={true}\r\n                            // keepOpenOnDateSelect={true}\r\n                            readOnly={false}\r\n                            // displayFormat={\"DD/MMMM/YYYY\"}\r\n                            //   numberOfMonths={1}\r\n                            showClearDates={true}\r\n                            focusedInput={focus}\r\n                            onFocusChange={onFocusChange}\r\n                            startDateId=\"startDateMookh\"\r\n                            endDateId=\"endDateMookh\"\r\n                            minimumNights={0}\r\n                        /> */}\r\n                            <div id=\"exTab1\" >\r\n                                <ul className=\"nav nav-tabs\" role=\"tablist\">\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link active\" href=\"#claim-start\" role=\"tab\" data-toggle=\"tab\">Claim Period Start Date</a>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link\" href=\"#claim-end\" role=\"tab\" data-toggle=\"tab\">Claim Period End Date</a>\r\n                                    </li>\r\n                                </ul>\r\n                                {/* <DateRangePicker\r\n                                startDatePlaceholderText=\"Start\"\r\n                                startDate={\r\n                                    valDate !== null && valDate.length === 10 ?  moment(valDate, 'DD/MM/YYYY'):\r\n                                        startDate}\r\n                                // required={false}\r\n                                onDatesChange={handleOnDateChange}\r\n                                endDatePlaceholderText=\"End\"\r\n                                 endDate={secondDate !== null && secondDate.length === 10 ? moment(secondDate, 'DD/MM/YYYY') : endDate}\r\n                                reopenPickerOnClearDate={true}\r\n                                displayFormat={\"DD/MM/YYYY\"}\r\n                                //isDayHighlighted={()=>secondDate !== null && secondDate.length === 10 ? moment(secondDate, 'DD/MM/YYYY') : endDate}\r\n                                readOnly={false}\r\n                                showClearDates={true}\r\n                                focusedInput={focus}\r\n                                onFocusChange={onFocusChange}\r\n                                startDateId=\"startDateMookh\"\r\n                                endDateId=\"endDateMookh\"\r\n                                minimumNights={0}\r\n                                isOutsideRange={() => false}\r\n                              \r\n                            /> */}\r\n\r\n\r\n                                <DayPickerRangeController\r\n                                    focused\r\n                                    key={Math.random()}\r\n                                    daySize={40}\r\n                                    className=\"Datezp8\"\r\n                                    horizontalMonthPadding={1}\r\n                                    // autoFocusEndDate={true}\r\n                                    numberOfMonths={2}\r\n                                    startDate={\r\n                                        companyresponse.data === true && valDate !== null && valDate.length === 10 && firstDateMessage === null ? \r\n                                        moment(valDate, 'DD/MM/YYYY') :\r\n                                        companyresponse.data === true && startDate ? startDate : \"\"}\r\n                                    endDate={ companyresponse.data === true && secondDate !== null && secondDate.length === 10 ?\r\n                                         moment(secondDate, 'DD/MM/YYYY') :  companyresponse.data === true && endDate ? endDate : \"\"}\r\n                                    onDatesChange={handleOnDateChange}\r\n                                    focusedInput={focusedInput}\r\n                                    onFocusChange={e => setFocusedInput(e)}\r\n                                    isOutsideRange={() => false}\r\n                                // initialVisibleMonth={() => moment().add(2, \"M\")}\r\n\r\n\r\n\r\n\r\n\r\n                                />\r\n\r\n                                <div className=\"tab-content\">\r\n                                    <div role=\"tabpanel\" className=\"tab-pane fade in active show\" id=\"claim-start\">\r\n                                        <div id=\"datepicker\" className=\"calendar\">\r\n\r\n                                        </div>\r\n                                        <div id=\"datepicker4\" className=\"calendar\"></div>\r\n                                    </div>\r\n                                    <div role=\"tabpanel\" className=\"tab-pane fade\" id=\"claim-end\">\r\n                                        <div id=\"datepicker2\" className=\"calendar\">hai</div>\r\n                                        <div id=\"datepicker3\" className=\"calendar\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-12\">\r\n                    <div className=\"tell-us-about-your-company-right-section\">\r\n                        <hr className=\"tell-us-about-your-company-line1\" />\r\n                        <div className=\"tell-us-about-your-company-right-section-img\">\r\n                            <img src=\"assets/images/bulb-icon.png\" alt=\"bulb-icon\" />\r\n                        </div>\r\n                        <p>We use Companies House publicly available data to retrieve information about your company. By using Companies House data, we can tell you exactly how many R&D claims you can make for your company. If we cannot find your company details not to worry, you can continue to use the company name you entered above.\r\n                    </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClaimPeriod;","E:\\task\\project\\rdvault\\src\\components\\pages\\Grant.jsx",["130","131"],"E:\\task\\project\\rdvault\\src\\components\\pages\\Expenses.jsx",["132"],"import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nfunction Expenses() {\r\n    const companyresponse = useSelector(state => state);\r\n    console.log(\"companyresponsecompanyresponse\",companyresponse)\r\n    return (\r\n        <div id=\"expense\" \r\n            className={companyresponse.grantPeriod.data === true && \r\n                companyresponse.companyReducer.data === true && companyresponse.claimReducer.claimdata === true ? \"rdexpenses_section row custom-m-top-40\" : \r\n            \"rdexpenses_section row custom-m-top-40 click\"}>\r\n            <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-12\">\r\n                <div className=\"tell-us-about-your-company-left-section\">\r\n                    <hr className=\"tell-us-about-your-company-line\" />\r\n                    <h3> R&D\r\n                        Expenses\r\n                    </h3>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-6 col-xl-6 col-lg-6 col-sm-6 col-12\">\r\n                <div className=\"rdexpenses_card_section\">\r\n                    <div className=\"rdexpenses_card1_section\">\r\n                        <h4>Recommended</h4>\r\n                        <div className=\"empty-space\">\r\n                        </div>\r\n                        <p>Connect to your Xero account to view your data instantly and estimate your R&D claim more accurately. </p>\r\n                        <button className=\"btn btn-primary\">Connect To Xero</button>\r\n                    </div>\r\n                    <div className=\"rdexpenses_card2_section\">\r\n                        {/* \r\n                        <h4 className=\"title-empty-space\"></h4>\r\n                        */}\r\n                        <div className=\"rdexpenses_card2_img\">\r\n                            <img src=\"assets/images/rdexpensesicon.png\" alt=\"redexpensesicon\" />\r\n                        </div>\r\n                        <p>Insert your expense information manually to estimate your R&D claim. </p>\r\n                        <button className=\"btn btn-primary\">Manually Input Data</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-12\">\r\n                <div className=\"tell-us-about-your-company-right-section\">\r\n                    <hr className=\"tell-us-about-your-company-line1\" />\r\n                    <div className=\"tell-us-about-your-company-right-section-img\">\r\n                        <img src=\"assets/images/bulb-icon.png\" alt=\"bulb-icon\" />\r\n                    </div>\r\n                    <p>We use Companies House publicly available data to retrieve information about your company. By using Companies House data, we can tell you exactly how many R&D claims you can make for your company. If we cannot find your company details not to worry, you can continue to use the company name you entered above.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Expenses\r\n","E:\\task\\project\\rdvault\\src\\components\\common\\Dates.js",[],"E:\\task\\project\\rdvault\\src\\components\\pages\\DatePicker.jsx",["133","134","135"],"E:\\task\\project\\rdvault\\src\\components\\common\\Context.js",[],"E:\\task\\project\\rdvault\\src\\components\\redux\\reducer\\index.js",[],"E:\\task\\project\\rdvault\\src\\components\\redux\\store\\store.js",[],"E:\\task\\project\\rdvault\\src\\components\\redux\\reducer\\CompanyReducer.js",[],"E:\\task\\project\\rdvault\\src\\components\\redux\\store\\Store.js",[],"E:\\task\\project\\rdvault\\src\\components\\redux\\action\\CompanyAction.js",[],"E:\\task\\project\\rdvault\\src\\components\\redux\\reducer\\ClaimReducer.js",[],"E:\\task\\project\\rdvault\\src\\components\\redux\\action\\ClaimPeriod.js",[],"E:\\task\\project\\rdvault\\src\\components\\redux\\reducer\\GrantPeriod.js",[],"E:\\task\\project\\rdvault\\src\\components\\redux\\action\\Grant.js",[],"E:\\task\\project\\rdvault\\src\\Form.js",["136","137","138","139"],"import React from 'react';\r\nimport { FormControl, InputLabel, FormHelperText, Input, TextField } from '@material-ui/core';\r\nconst Form = () => {\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <form className={\"form-class\"} noValidate autoComplete=\"off\">\r\n                <div className=\"data-content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <TextField id=\"standard-secondary\" label=\"firstname\" color=\"Success\" />\r\n                        </div>\r\n                        <div className=\"col-md-12\">\r\n                            <TextField id=\"standard-secondary\" label=\"lastname\" color=\"Success\" />\r\n                        </div>\r\n                        <div className=\"col-md-12\">\r\n                            <TextField id=\"standard-secondary\" label=\"email\" color=\"Success\" />\r\n                        </div>\r\n                        <div className=\"col-md-12\">\r\n                            <TextField id=\"standard-secondary\" label=\"mobilenumber\" color=\"Success\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;",{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"140","replacedBy":"144"},{"ruleId":"142","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":15},{"ruleId":"146","severity":1,"message":"150","line":5,"column":8,"nodeType":"148","messageId":"149","endLine":5,"endColumn":12},{"ruleId":"146","severity":1,"message":"147","line":8,"column":8,"nodeType":"148","messageId":"149","endLine":8,"endColumn":15},{"ruleId":"146","severity":1,"message":"151","line":12,"column":12,"nodeType":"148","messageId":"149","endLine":12,"endColumn":17},{"ruleId":"146","severity":1,"message":"152","line":12,"column":18,"nodeType":"148","messageId":"149","endLine":12,"endColumn":26},{"ruleId":"146","severity":1,"message":"153","line":4,"column":10,"nodeType":"148","messageId":"149","endLine":4,"endColumn":21},{"ruleId":"146","severity":1,"message":"154","line":9,"column":11,"nodeType":"148","messageId":"149","endLine":9,"endColumn":18},{"ruleId":"155","severity":1,"message":"156","line":95,"column":34,"nodeType":"157","messageId":"158","endLine":95,"endColumn":36},{"ruleId":"146","severity":1,"message":"159","line":7,"column":10,"nodeType":"148","messageId":"149","endLine":7,"endColumn":25},{"ruleId":"146","severity":1,"message":"147","line":9,"column":8,"nodeType":"148","messageId":"149","endLine":9,"endColumn":15},{"ruleId":"146","severity":1,"message":"160","line":20,"column":7,"nodeType":"148","messageId":"149","endLine":20,"endColumn":12},{"ruleId":"146","severity":1,"message":"161","line":31,"column":12,"nodeType":"148","messageId":"149","endLine":31,"endColumn":20},{"ruleId":"146","severity":1,"message":"162","line":33,"column":12,"nodeType":"148","messageId":"149","endLine":33,"endColumn":24},{"ruleId":"146","severity":1,"message":"163","line":34,"column":12,"nodeType":"148","messageId":"149","endLine":34,"endColumn":22},{"ruleId":"146","severity":1,"message":"164","line":35,"column":12,"nodeType":"148","messageId":"149","endLine":35,"endColumn":22},{"ruleId":"146","severity":1,"message":"165","line":42,"column":12,"nodeType":"148","messageId":"149","endLine":42,"endColumn":20},{"ruleId":"146","severity":1,"message":"166","line":43,"column":12,"nodeType":"148","messageId":"149","endLine":43,"endColumn":17},{"ruleId":"167","severity":1,"message":"168","line":65,"column":8,"nodeType":"169","endLine":65,"endColumn":17,"suggestions":"170"},{"ruleId":"146","severity":1,"message":"171","line":68,"column":11,"nodeType":"148","messageId":"149","endLine":68,"endColumn":24},{"ruleId":"146","severity":1,"message":"172","line":116,"column":11,"nodeType":"148","messageId":"149","endLine":116,"endColumn":22},{"ruleId":"146","severity":1,"message":"173","line":174,"column":11,"nodeType":"148","messageId":"149","endLine":174,"endColumn":18},{"ruleId":"174","severity":1,"message":"175","line":205,"column":163,"nodeType":"176","messageId":"177","endLine":205,"endColumn":164},{"ruleId":"167","severity":1,"message":"178","line":19,"column":7,"nodeType":"169","endLine":19,"endColumn":45,"suggestions":"179"},{"ruleId":"167","severity":1,"message":"180","line":19,"column":8,"nodeType":"181","endLine":19,"endColumn":43},{"ruleId":"146","severity":1,"message":"182","line":2,"column":23,"nodeType":"148","messageId":"149","endLine":2,"endColumn":34},{"ruleId":"146","severity":1,"message":"183","line":5,"column":27,"nodeType":"148","messageId":"149","endLine":5,"endColumn":43},{"ruleId":"146","severity":1,"message":"184","line":5,"column":45,"nodeType":"148","messageId":"149","endLine":5,"endColumn":69},{"ruleId":"185","severity":1,"message":"186","line":62,"column":1,"nodeType":"187","messageId":"188","endLine":70,"endColumn":7},{"ruleId":"146","severity":1,"message":"189","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":21},{"ruleId":"146","severity":1,"message":"190","line":2,"column":23,"nodeType":"148","messageId":"149","endLine":2,"endColumn":33},{"ruleId":"146","severity":1,"message":"191","line":2,"column":35,"nodeType":"148","messageId":"149","endLine":2,"endColumn":49},{"ruleId":"146","severity":1,"message":"192","line":2,"column":51,"nodeType":"148","messageId":"149","endLine":2,"endColumn":56},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],["193"],["194"],"no-unused-vars","'Context' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'claimPeriod' is defined but never used.","'inputEl' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'DateRangePicker' is defined but never used.","'month' is assigned a value but never used.","'hideDate' is assigned a value but never used.","'valstartDate' is assigned a value but never used.","'valendDate' is assigned a value but never used.","'firstClick' is assigned a value but never used.","'datebool' is assigned a value but never used.","'focus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["195"],"'onFocusChange' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'dateKey' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has missing dependencies: 'grantno' and 'grantyes'. Either include them or remove the dependency array.",["196"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","'useDispatch' is defined but never used.","'SingleDatePicker' is defined but never used.","'DayPickerRangeController' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'FormHelperText' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},"Update the dependencies array to be: [dispatch, endDate]",{"range":"201","text":"202"},"Update the dependencies array to be: [grantno, grantyes]",{"range":"203","text":"204"},[2646,2655],"[dispatch, endDate]",[657,695],"[grantno, grantyes]"]