[{"E:\\task\\project\\rdvault\\src\\index.js":"1","E:\\task\\project\\rdvault\\src\\reportWebVitals.js":"2","E:\\task\\project\\rdvault\\src\\components\\pages\\Header.jsx":"3","E:\\task\\project\\rdvault\\src\\App.js":"4","E:\\task\\project\\rdvault\\src\\components\\pages\\Main.js":"5","E:\\task\\project\\rdvault\\src\\components\\pages\\Footer.jsx":"6","E:\\task\\project\\rdvault\\src\\components\\common\\Data.jsx":"7","E:\\task\\project\\rdvault\\src\\components\\pages\\CompanyDetails.jsx":"8","E:\\task\\project\\rdvault\\src\\components\\pages\\ClaimPeriod.jsx":"9","E:\\task\\project\\rdvault\\src\\components\\pages\\Grant.jsx":"10","E:\\task\\project\\rdvault\\src\\components\\pages\\Expenses.jsx":"11","E:\\task\\project\\rdvault\\src\\components\\common\\Dates.js":"12","E:\\task\\project\\rdvault\\src\\components\\pages\\DatePicker.jsx":"13"},{"size":550,"mtime":1608546147044,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1606119462860,"results":"16","hashOfConfig":"15"},{"size":4799,"mtime":1608543061139,"results":"17","hashOfConfig":"15"},{"size":156,"mtime":1608546183140,"results":"18","hashOfConfig":"15"},{"size":750,"mtime":1608711143431,"results":"19","hashOfConfig":"15"},{"size":791,"mtime":1608545749461,"results":"20","hashOfConfig":"15"},{"size":3162,"mtime":1608631031025,"results":"21","hashOfConfig":"15"},{"size":9863,"mtime":1608782859365,"results":"22","hashOfConfig":"15"},{"size":13387,"mtime":1609151817487,"results":"23","hashOfConfig":"15"},{"size":5579,"mtime":1608713728970,"results":"24","hashOfConfig":"15"},{"size":2588,"mtime":1608714283079,"results":"25","hashOfConfig":"15"},{"size":518,"mtime":1608727040533,"results":"26","hashOfConfig":"15"},{"size":1875,"mtime":1608792903338,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"fn53wx",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\task\\project\\rdvault\\src\\index.js",[],["59","60"],"E:\\task\\project\\rdvault\\src\\reportWebVitals.js",[],["61","62"],"E:\\task\\project\\rdvault\\src\\components\\pages\\Header.jsx",[],"E:\\task\\project\\rdvault\\src\\App.js",[],["63","64"],"E:\\task\\project\\rdvault\\src\\components\\pages\\Main.js",[],"E:\\task\\project\\rdvault\\src\\components\\pages\\Footer.jsx",[],"E:\\task\\project\\rdvault\\src\\components\\common\\Data.jsx",[],"E:\\task\\project\\rdvault\\src\\components\\pages\\CompanyDetails.jsx",["65"],"E:\\task\\project\\rdvault\\src\\components\\pages\\ClaimPeriod.jsx",["66","67","68","69","70","71"],"import React, { useState, useEffect } from 'react';\r\nimport Dates from '../common/Dates';\r\nimport moment from \"moment\";\r\nimport 'react-dates/initialize';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport { DateRangePicker } from 'react-dates';\r\nimport './picker.css'\r\n\r\n\r\n\r\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n];\r\n\r\nconst month = [\"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"];\r\n\r\nconst ClaimPeriod = (props) => {\r\n    console.log(\"-----------------\", props)\r\n    const [data, setData] = useState([]);\r\n    const [checkData, setCheckData] = useState([]);\r\n    const [valDate, setValDate] = useState(null);\r\n    const [hideDate, setHideDate] = useState(false);\r\n    const [secondDate, setSecondDate] = useState(\"\")\r\n    const [valstartDate, valsetStartDate] = useState(\"\");\r\n    const [valendDate, valsetEndDate] = useState(\"\");\r\n    const [firstClick,setFirstClick] = useState(false)\r\n    const [dateRange, setdateRange] = useState({\r\n        startDate: null,\r\n        endDate: null\r\n    });\r\n    // const [startDate,setstartDate] = useState(null)\r\n    // const [endDate,setendDate] = useState(null)\r\n    const [datebool, setDateBool] = useState(false)\r\n    const [focus, setFocus] = useState(\"startDate\");\r\n\r\n\r\n    const { startDate, endDate } = dateRange;\r\n\r\n    const handleOnDateChange = (startDate, endDate) => {\r\n        console.log(\"handledatachange\", startDate, endDate)\r\n        setdateRange(startDate, endDate);\r\n        setDateBool(true)\r\n    }\r\n\r\n\r\n\r\n    const onFocusChange = (focus) => {\r\n        console.log(\"focus\", focus)\r\n        setFocus(focus)\r\n        if (focus) {\r\n            setFocus(focus)\r\n        } else {\r\n            setFocus(\"startDate\")\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        setData(Dates)\r\n    }, [])\r\n\r\n    const handelCheckBox = (e) => {\r\n        const mapdata = data.map((val, index) => {\r\n            if (val.name === e.target.name && val.checked === false) {\r\n                val.checked = true;\r\n                valsetStartDate(val.startdate.getDate() + \"/\" + monthNames[val.startdate.getMonth()] + \"/\" + val.startdate.getFullYear())\r\n                valsetEndDate(val.enddate.getDate() + \"/\" + monthNames[val.enddate.getMonth()] + \"/\" + val.enddate.getFullYear())\r\n                return val;\r\n            } else {\r\n                val.checked = false;\r\n                return val;\r\n            }\r\n        })\r\n        setCheckData(mapdata);\r\n    }\r\n\r\n    //   let dateboolean = false;\r\n    //   data.map((ele,i)=>{\r\n    //       if(ele.checked === true) {\r\n    //         dateboolean=ele.checked;\r\n    //       }\r\n    //   })\r\n\r\n\r\n\r\n    const handleClick = () => {\r\n        console.log(\"clicked\")\r\n        setFirstClick(true)\r\n    }\r\n\r\n    const firstDateChange = (e) => {\r\n        console.log(\"sreedev--------\", e)\r\n        if (e.target.value.length >= 1) {\r\n            setHideDate(true);\r\n            setValDate(e.target.value)\r\n        } if (e.target.value.length === 2) {\r\n            setHideDate(true);\r\n            console.log(\"hai\")\r\n            setValDate(e.target.value + '/')\r\n        } if (e.target.value.length === 5) {\r\n            setValDate(e.target.value + '/20')\r\n        }\r\n    }\r\n\r\n    console.log(\"valDate\", valDate);\r\n\r\n    const secondDateChange = (e) => {\r\n        if (e.target.value.length >= 1) {\r\n            setSecondDate(e.target.value)\r\n        } if (e.target.value.length === 2) {\r\n            console.log(\"hai\")\r\n            setSecondDate(e.target.value + '/')\r\n        } if (e.target.value.length === 5) {\r\n            setSecondDate(e.target.value + '/20')\r\n        }\r\n    }\r\n\r\n    const dateKey = (e) => {\r\n        console.log(\"dev---------\", e.charCode)\r\n        if (e.charCode < 48 || e.charCode > 57) {\r\n            e.preventDefault();\r\n            return false\r\n        }\r\n    }\r\n\r\n\r\n    console.log(\"firstClickfirstClick\",firstClick)\r\n\r\n    return (\r\n        <div className={firstClick === false ? \"row custom-m-top-40 click\" : \"row custom-m-top-40\"} onClick={handleClick} >\r\n            <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-12\">\r\n                <div className=\"tell-us-about-your-company-left-section\">\r\n                    <hr className=\"tell-us-about-your-company-line\" />\r\n                    <h3>  Your R&D Claim Period</h3>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-6 col-xl-6 col-lg-6 col-sm-6 col-12\">\r\n                <div className=\"tell-us-about-your-company-center-section\">\r\n                    <div className=\"tell-us-about-your-company-card-section\">\r\n                        <p>Please select the claim period you would like to\r\n                            estimate your R&D claim for?\r\n                        </p>\r\n                        {\r\n                            Dates.length >= 1 ? Dates.map((ele, index) => {\r\n                                return (\r\n                                    <div className=\"custom-checbox-1 tell-us-about-your-company-card-section-label\">\r\n                                        <span>Period {ele.id}:{\r\n                                            ele.startdate.getDate() + \" \" + monthNames[ele.startdate.getMonth()] + \" \" + ele.startdate.getFullYear() + \" to \" + \"\" +\r\n                                            ele.enddate.getDate() + \" \" + monthNames[ele.enddate.getMonth()] + \" \" + ele.enddate.getFullYear()}</span>\r\n                                        <div className=\"cust-checkbox\">\r\n                                            <div className=\"custom-checkbox\">\r\n                                                <input name={ele.name}\r\n                                                    className=\"checkbox-custom\"\r\n                                                    id={ele.id}\r\n                                                    type=\"checkbox\"\r\n                                                    checked={ele.checked}\r\n                                                    onChange={handelCheckBox}\r\n                                                //  disabled={datebool === true ? !ele.checked : ele.checked}\r\n                                                />\r\n                                                <label className=\"checkbox-custom-label\" for={ele.id}></label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }) : null\r\n                        }\r\n                        <div className=\"calendar-label-input-section \">\r\n                            <div className=\"calendar-label-input form-group\">\r\n                                <label>Claim Period Start Date:</label>\r\n                                <div className=\"calendar-input-section\">\r\n                                    <input type=\"text\" id=\"datepicker1\"\r\n                                        // value={datebool === true && startDate !== null ?\r\n                                        //     moment(startDate._d).format(\"DD/MM/YYYY\") : \"dd/mm/yyyy\"} \r\n                                        onKeyPress={dateKey}\r\n                                        value={datebool === true ? moment(startDate._d).format(\"DD/MM/YYYY\") : valDate}\r\n                                        onChange={firstDateChange}\r\n                                        maxlength={10}\r\n                                    />\r\n                                    <span className=\"left-line\">|</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"calendar-label-input form-group\">\r\n                                <label>Claim Period End Date:</label>\r\n                                <div className=\"calendar-input-section\">\r\n                                    <input type=\"text\" id=\"datepicker1\"\r\n                                        // value={datebool === true && startDate !== null && endDate !== null ?\r\n                                        //     moment(endDate._d).format(\"DD/MM/YYYY\") : \"dd/mm/yyyy\"}\r\n\r\n                                        onKeyPress={dateKey}\r\n                                        value={\r\n\r\n                                            datebool === true && endDate !== null ? moment(endDate._d).format(\"DD/MM/YYYY\") : secondDate}\r\n                                        onChange={secondDateChange}\r\n                                        maxlength={10}\r\n                                    // onChange={DateChange}\r\n                                    />\r\n                                    <span className=\"left-line\">|</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* <DateRangePicker\r\n                            startDatePlaceholderText=\"Start\"\r\n                            startDate={startDate}\r\n                            required={false}\r\n                            onDatesChange={handleOnDateChange}\r\n                            endDatePlaceholderText=\"End\"\r\n                            endDate={endDate}\r\n                            reopenPickerOnClearDate={true}\r\n                            // keepOpenOnDateSelect={true}\r\n                            readOnly={false}\r\n                            // displayFormat={\"DD/MMMM/YYYY\"}\r\n                            //   numberOfMonths={1}\r\n                            showClearDates={true}\r\n                            focusedInput={focus}\r\n                            onFocusChange={onFocusChange}\r\n                            startDateId=\"startDateMookh\"\r\n                            endDateId=\"endDateMookh\"\r\n                            minimumNights={0}\r\n                        /> */}\r\n                        <div id=\"exTab1\" >\r\n                            <ul className=\"nav nav-tabs\" role=\"tablist\">\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link active\" href=\"#claim-start\" role=\"tab\" data-toggle=\"tab\">Claim Period Start Date</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link\" href=\"#claim-end\" role=\"tab\" data-toggle=\"tab\">Claim Period End Date</a>\r\n                                </li>\r\n                            </ul>\r\n                            <DateRangePicker\r\n                                startDatePlaceholderText=\"Start\"\r\n                                startDate={\r\n                                    valDate !== null && valDate.length === 10 ? moment(valDate) :\r\n                                        startDate}\r\n                                required={false}\r\n                                onDatesChange={handleOnDateChange}\r\n                                endDatePlaceholderText=\"End\"\r\n                                endDate={secondDate !== null && secondDate.length === 10 ? moment(secondDate) : endDate}\r\n                                reopenPickerOnClearDate={true}\r\n                                displayFormat={\"MM/DD/YYYY\"}\r\n                                readOnly={false}\r\n                                showClearDates={true}\r\n                                focusedInput={focus}\r\n                                onFocusChange={onFocusChange}\r\n                                startDateId=\"startDateMookh\"\r\n                                endDateId=\"endDateMookh\"\r\n                                minimumNights={0}\r\n                            />\r\n                            <div className=\"tab-content\">\r\n                                <div role=\"tabpanel\" className=\"tab-pane fade in active show\" id=\"claim-start\">\r\n                                    <div id=\"datepicker\" className=\"calendar\">\r\n\r\n                                    </div>\r\n                                    <div id=\"datepicker4\" className=\"calendar\"></div>\r\n                                </div>\r\n                                <div role=\"tabpanel\" className=\"tab-pane fade\" id=\"claim-end\">\r\n                                    <div id=\"datepicker2\" className=\"calendar\">hai</div>\r\n                                    <div id=\"datepicker3\" className=\"calendar\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-12\">\r\n                <div className=\"tell-us-about-your-company-right-section\">\r\n                    <hr className=\"tell-us-about-your-company-line1\" />\r\n                    <div className=\"tell-us-about-your-company-right-section-img\">\r\n                        <img src=\"assets/images/bulb-icon.png\" alt=\"bulb-icon\" />\r\n                    </div>\r\n                    <p>We use Companies House publicly available data to retrieve information about your company. By using Companies House data, we can tell you exactly how many R&D claims you can make for your company. If we cannot find your company details not to worry, you can continue to use the company name you entered above.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClaimPeriod;","E:\\task\\project\\rdvault\\src\\components\\pages\\Grant.jsx",["72"],"import React, { useState, useEffect } from 'react';\r\n\r\n\r\nfunction Grant() {\r\n    const [grantno, setGrantNo] = useState(false);\r\n    const [grantyes, setGrantYes] = useState(false);\r\n\r\n    const handleNo = () => {\r\n        setGrantNo(!grantno);\r\n        setGrantYes(false)\r\n    }\r\n\r\n    const handleYes = () => {\r\n        setGrantNo(false);\r\n        setGrantYes(!grantyes)\r\n    }\r\n    return (\r\n        <div className=\"grands_subsidies_section row custom-m-top-40\">\r\n            <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-12\">\r\n                <div className=\"tell-us-about-your-company-left-section\">\r\n                    <hr className=\"tell-us-about-your-company-line\" />\r\n                    <h3>  Grants &\r\n                        Subsidies</h3>\r\n                    {\r\n                        grantno === true || grantyes === true ?\r\n                            <div className=\"completed-text\"><span>COMPLETED</span></div>\r\n                            : null\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-6 col-xl-6 col-lg-6 col-sm-6 col-12\">\r\n                <div className=\"tell-us-about-your-company-center-section\">\r\n                    <div className=\"tell-us-about-your-company-card-section\">\r\n                        <p className=\"custom-m-top-20\">Has your company been in receipt of one or more Grants/Subsidies in this period?</p>\r\n                        <div className=\"tell-us-about-your-company-card2\">\r\n                            <div className=\"tell-us-about-your-company-maincard2 column-card-1 custom-m-top-20\">\r\n                                <div className=\"tell-us-about-your-company-card2-width\">\r\n                                    <div className=\"tell-us-about-your-company-card2-label tell-us-about-your-company-card-section-label\">\r\n                                        <div className=\"tell-us-about-your-company-card2-top\">\r\n                                            <span>NO</span>\r\n                                            <div className=\"cust-checkbox\">\r\n                                                <div className=\"custom-checkbox\">\r\n                                                    <input name=\"noti_6\"\r\n                                                        className=\"checkbox-custom\"\r\n                                                        id=\"noti_8\" value=\"3\"\r\n                                                        type=\"checkbox\"\r\n                                                        checked={grantno}\r\n                                                        onChange={handleNo\r\n                                                        }\r\n                                                    />\r\n                                                    <label className=\"checkbox-custom-label\" for=\"noti_8\"></label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"tell-us-about-your-company-card2-width\">\r\n                                    <div className=\"tell-us-about-your-company-card2-label tell-us-about-your-company-card-section-label\">\r\n                                        <div className=\"tell-us-about-your-company-card2-top\">\r\n                                            <span>Yes</span>\r\n                                            <div className=\"cust-checkbox\">\r\n                                                <div className=\"custom-checkbox\">\r\n                                                    <input\r\n                                                        name=\"noti_6\"\r\n                                                        className=\"checkbox-custom\"\r\n                                                        id=\"noti_9\" value=\"3\"\r\n                                                        type=\"checkbox\"\r\n                                                        checked={grantyes}\r\n                                                        onChange={handleYes}\r\n                                                    />\r\n                                                    <label className=\"checkbox-custom-label\" for=\"noti_9\"></label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-12\">\r\n                <div className=\"tell-us-about-your-company-right-section\">\r\n                    <hr className=\"tell-us-about-your-company-line1\" />\r\n                    <div className=\"tell-us-about-your-company-right-section-img\">\r\n                        <img src=\"assets/images/bulb-icon.png\"alt=\"bulb-icon\" />\r\n                    </div>\r\n                    <p>We use Companies House publicly available data to retrieve information about your company. By using Companies House data, we can tell you exactly how many R&D claims you can make for your company. If we cannot find your company details not to worry, you can continue to use the company name you entered above.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Grant\r\n","E:\\task\\project\\rdvault\\src\\components\\pages\\Expenses.jsx",[],"E:\\task\\project\\rdvault\\src\\components\\common\\Dates.js",[],"E:\\task\\project\\rdvault\\src\\components\\pages\\DatePicker.jsx",["73","74","75"],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"76","replacedBy":"80"},{"ruleId":"78","replacedBy":"81"},{"ruleId":"76","replacedBy":"82"},{"ruleId":"78","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":71,"column":30,"nodeType":"86","messageId":"87","endLine":71,"endColumn":32},{"ruleId":"88","severity":1,"message":"89","line":15,"column":7,"nodeType":"90","messageId":"91","endLine":15,"endColumn":12},{"ruleId":"88","severity":1,"message":"92","line":20,"column":12,"nodeType":"90","messageId":"91","endLine":20,"endColumn":21},{"ruleId":"88","severity":1,"message":"93","line":22,"column":12,"nodeType":"90","messageId":"91","endLine":22,"endColumn":20},{"ruleId":"88","severity":1,"message":"94","line":24,"column":12,"nodeType":"90","messageId":"91","endLine":24,"endColumn":24},{"ruleId":"88","severity":1,"message":"95","line":25,"column":12,"nodeType":"90","messageId":"91","endLine":25,"endColumn":22},{"ruleId":"96","severity":1,"message":"97","line":146,"column":159,"nodeType":"98","messageId":"99","endLine":146,"endColumn":160},{"ruleId":"88","severity":1,"message":"100","line":1,"column":27,"nodeType":"90","messageId":"91","endLine":1,"endColumn":36},{"ruleId":"88","severity":1,"message":"101","line":5,"column":27,"nodeType":"90","messageId":"91","endLine":5,"endColumn":43},{"ruleId":"88","severity":1,"message":"102","line":5,"column":45,"nodeType":"90","messageId":"91","endLine":5,"endColumn":69},{"ruleId":"103","severity":1,"message":"104","line":62,"column":1,"nodeType":"105","messageId":"106","endLine":70,"endColumn":7},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],["107"],["108"],["107"],["108"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'month' is assigned a value but never used.","Identifier","unusedVar","'checkData' is assigned a value but never used.","'hideDate' is assigned a value but never used.","'valstartDate' is assigned a value but never used.","'valendDate' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useEffect' is defined but never used.","'SingleDatePicker' is defined but never used.","'DayPickerRangeController' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]